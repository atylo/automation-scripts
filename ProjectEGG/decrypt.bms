set EXE_NAME "egg_launcher"
get SIZE asize
math DUMP_ORIGINAL_RESOURCES = 1
encryption md5 EXE_NAME
encryption xor "\xff"
string KEY e QUICKBMS_HASH
print "KEY %KEY|h%"
set DUMP_EXT string "txt"
callfunction DUMP 1
# callfunction DUMP_EXTRACT 1

startfunction DUMP
    math CHUNK_SIZE = 0x100
    xmath CHUNKS "SIZE / CHUNK_SIZE"

    log MEMORY_FILE 0 0
    append
	print "getvarchr doing?"
    getvarchr KEY_INC KEY 0 long
	print "KEY %KEY|h%"
	print "KEY_INC %KEY_INC%"
	print "Decrypting AES"
    for i = 0 < CHUNKS
        xmath TMP "KEY_INC ^ i"
        putvarchr KEY 0 TMP long

        encryption "AES" KEY "" 0 16
        log MEMORY_FILE OFFSET CHUNK_SIZE
        math OFFSET + CHUNK_SIZE
    next i
    append
    encryption "" ""

    if DUMP_ORIGINAL_RESOURCES != 0
		print "DUMP_ORIGINAL_RESOURCES != 0"
        get SIZE asize MEMORY_FILE
        string NAME p "%s.%s" EXE_NAME DUMP_EXT
        log NAME 0 SIZE MEMORY_FILE
    endif
endfunction

startfunction DUMP_EXTRACT
    get MEM_LIMIT asize MEMORY_FILE
    goto 0 MEMORY_FILE
    for
        savepos TMP MEMORY_FILE
        if TMP >= MEM_LIMIT
            break
        endif
        getdstring TYPE 4 MEMORY_FILE   # "DATA"
        if TYPE == "END"
            break
        elif TYPE == "NEXT"
			print "TYPE == NEXT"
            get OFFSET long MEMORY_FILE
            math OFFSET * CHUNK_SIZE
            goto OFFSET MEMORY_FILE
        else
            get OFFSET long MEMORY_FILE
            get SIZE long MEMORY_FILE
            getdstring NAME 0x14 MEMORY_FILE
            math OFFSET * CHUNK_SIZE
            string NAME + "."

            savepos TMP MEMORY_FILE
            goto OFFSET MEMORY_FILE
            getdstring SIGN 8 MEMORY_FILE
			print "SIGN %SIGN%"
            if SIGN == "COMPZIP "
                get XSIZE long MEMORY_FILE
                get DUMMY long MEMORY_FILE
                savepos OFFSET MEMORY_FILE
                math SIZE - 0x10
                clog NAME OFFSET SIZE XSIZE MEMORY_FILE
            else
                log NAME OFFSET SIZE MEMORY_FILE
            endif
            goto TMP MEMORY_FILE
        endif
    next
endfunction